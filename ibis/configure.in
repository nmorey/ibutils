dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/ibis_api.h)

dnl use local config dir for extras
AC_CONFIG_AUX_DIR(config)

dnl Defines the Language - we need g++ linker ...
AC_LANG_CPLUSPLUS

dnl we use auto cheader
AM_CONFIG_HEADER(config.h)

dnl Auto make
AM_INIT_AUTOMAKE(ibis,1.0)

dnl Provides control over re-making of all auto files
dnl We also use it to define swig dependencies so end
dnl users do not see them.
AM_MAINTAINER_MODE

dnl Required for cases make defines a MAKE=make ??? Why
AC_PROG_MAKE_SET

dnl Checks for programs.
AC_PROG_INSTALL
AC_PROG_LN_S
MLX_PROG_SWIG(1.1.5, eq)

dnl We will use libtool for making ...
AC_PROG_CXX
AC_PROG_CPP
AC_PROG_LIBTOOL

dnl For making dist we need not check any lib dependency
AC_ARG_ENABLE(libcheck,
[  --enable-libcheck    Enable Dependency Checking],
[case "${enableval}" in
  yes) libcheck=true ;;
  no)  libcheck=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-libcheck) ;; esac],[libcheck=true])

dnl Get the TCL defs: TCL_LIBS TCL_CPPFLAGS
MLX_LANG_TCL

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([inttypes.h stdlib.h string.h])

dnl Checks for typedefs, structures, and compiler characteristics.
dnl AC_HEADER_STDBOOL

AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

dnl Checks for library functions.
dnl AC_FUNC_MALLOC
dnl AC_FUNC_REALLOC
AC_CHECK_FUNCS([strchr strstr strtol strtoull regcomp regexec])

dnl Define an input config option to control debug compile
AC_ARG_ENABLE(debug,
[  --enable-debug    Turn on debugging],
[case "${enableval}" in
  yes) debug=true ;;
  no)  debug=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
esac],[debug=false])
AM_CONDITIONAL(DEBUG, test x$debug = xtrue)

dnl Define an input config option to allow ibis know where 
dnl the OSM is installed. This should point to one directory above 
dnl the include directory holding opensm/osm_build_id.h
OPENIB_APP_OSM

dnl Create the following Makefiles
AC_OUTPUT(Makefile src/Makefile tests/Makefile)

